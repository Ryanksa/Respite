// @generated by protobuf-ts 2.8.2 with parameter long_type_string,optimize_code_size
// @generated from protobuf file "proto/api.proto" (package "api", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { Api } from "./api";
import type { ApiOrder } from "./api";
import type { ApiGetOrdersRequest } from "./api";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { ApiCompleteOrderResponse } from "./api";
import type { ApiCompleteOrderRequest } from "./api";
import type { ApiMakeOrderResponse } from "./api";
import type { ApiMakeOrderRequest } from "./api";
import type { ApiGetItemsResponse } from "./api";
import type { ApiGetItemsRequest } from "./api";
import type { ApiGetItemResponse } from "./api";
import type { ApiGetItemRequest } from "./api";
import type { ApiUpdateItemResponse } from "./api";
import type { ApiUpdateItemRequest } from "./api";
import type { ApiRemoveItemResponse } from "./api";
import type { ApiRemoveItemRequest } from "./api";
import type { ApiAddItemResponse } from "./api";
import type { ApiAddItemRequest } from "./api";
import type { ApiGetRestaurantsResponse } from "./api";
import type { ApiGetRestaurantsRequest } from "./api";
import type { ApiGetRestaurantResponse } from "./api";
import type { ApiGetRestaurantRequest } from "./api";
import type { ApiUpdateRestaurantResponse } from "./api";
import type { ApiUpdateRestaurantRequest } from "./api";
import type { ApiDeleteRestaurantResponse } from "./api";
import type { ApiDeleteRestaurantRequest } from "./api";
import type { ApiCreateRestaurantResponse } from "./api";
import type { ApiCreateRestaurantRequest } from "./api";
import type { ApiSignInResponse } from "./api";
import type { ApiSignInRequest } from "./api";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { ApiSignUpResponse } from "./api";
import type { ApiSignUpRequest } from "./api";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service api.Api
 */
export interface IApiClient {
    /**
     * @generated from protobuf rpc: signUp(api.ApiSignUpRequest) returns (api.ApiSignUpResponse);
     */
    signUp(input: ApiSignUpRequest, options?: RpcOptions): UnaryCall<ApiSignUpRequest, ApiSignUpResponse>;
    /**
     * @generated from protobuf rpc: signIn(api.ApiSignInRequest) returns (api.ApiSignInResponse);
     */
    signIn(input: ApiSignInRequest, options?: RpcOptions): UnaryCall<ApiSignInRequest, ApiSignInResponse>;
    /**
     * @generated from protobuf rpc: createRestaurant(api.ApiCreateRestaurantRequest) returns (api.ApiCreateRestaurantResponse);
     */
    createRestaurant(input: ApiCreateRestaurantRequest, options?: RpcOptions): UnaryCall<ApiCreateRestaurantRequest, ApiCreateRestaurantResponse>;
    /**
     * @generated from protobuf rpc: deleteRestaurant(api.ApiDeleteRestaurantRequest) returns (api.ApiDeleteRestaurantResponse);
     */
    deleteRestaurant(input: ApiDeleteRestaurantRequest, options?: RpcOptions): UnaryCall<ApiDeleteRestaurantRequest, ApiDeleteRestaurantResponse>;
    /**
     * @generated from protobuf rpc: updateRestaurant(api.ApiUpdateRestaurantRequest) returns (api.ApiUpdateRestaurantResponse);
     */
    updateRestaurant(input: ApiUpdateRestaurantRequest, options?: RpcOptions): UnaryCall<ApiUpdateRestaurantRequest, ApiUpdateRestaurantResponse>;
    /**
     * @generated from protobuf rpc: getRestaurant(api.ApiGetRestaurantRequest) returns (api.ApiGetRestaurantResponse);
     */
    getRestaurant(input: ApiGetRestaurantRequest, options?: RpcOptions): UnaryCall<ApiGetRestaurantRequest, ApiGetRestaurantResponse>;
    /**
     * @generated from protobuf rpc: getRestaurants(api.ApiGetRestaurantsRequest) returns (api.ApiGetRestaurantsResponse);
     */
    getRestaurants(input: ApiGetRestaurantsRequest, options?: RpcOptions): UnaryCall<ApiGetRestaurantsRequest, ApiGetRestaurantsResponse>;
    /**
     * @generated from protobuf rpc: addItem(api.ApiAddItemRequest) returns (api.ApiAddItemResponse);
     */
    addItem(input: ApiAddItemRequest, options?: RpcOptions): UnaryCall<ApiAddItemRequest, ApiAddItemResponse>;
    /**
     * @generated from protobuf rpc: removeItem(api.ApiRemoveItemRequest) returns (api.ApiRemoveItemResponse);
     */
    removeItem(input: ApiRemoveItemRequest, options?: RpcOptions): UnaryCall<ApiRemoveItemRequest, ApiRemoveItemResponse>;
    /**
     * @generated from protobuf rpc: updateItem(api.ApiUpdateItemRequest) returns (api.ApiUpdateItemResponse);
     */
    updateItem(input: ApiUpdateItemRequest, options?: RpcOptions): UnaryCall<ApiUpdateItemRequest, ApiUpdateItemResponse>;
    /**
     * @generated from protobuf rpc: getItem(api.ApiGetItemRequest) returns (api.ApiGetItemResponse);
     */
    getItem(input: ApiGetItemRequest, options?: RpcOptions): UnaryCall<ApiGetItemRequest, ApiGetItemResponse>;
    /**
     * @generated from protobuf rpc: getItems(api.ApiGetItemsRequest) returns (api.ApiGetItemsResponse);
     */
    getItems(input: ApiGetItemsRequest, options?: RpcOptions): UnaryCall<ApiGetItemsRequest, ApiGetItemsResponse>;
    /**
     * @generated from protobuf rpc: makeOrder(api.ApiMakeOrderRequest) returns (api.ApiMakeOrderResponse);
     */
    makeOrder(input: ApiMakeOrderRequest, options?: RpcOptions): UnaryCall<ApiMakeOrderRequest, ApiMakeOrderResponse>;
    /**
     * @generated from protobuf rpc: completeOrder(api.ApiCompleteOrderRequest) returns (api.ApiCompleteOrderResponse);
     */
    completeOrder(input: ApiCompleteOrderRequest, options?: RpcOptions): UnaryCall<ApiCompleteOrderRequest, ApiCompleteOrderResponse>;
    /**
     * @generated from protobuf rpc: getOrders(api.ApiGetOrdersRequest) returns (stream api.ApiOrder);
     */
    getOrders(input: ApiGetOrdersRequest, options?: RpcOptions): ServerStreamingCall<ApiGetOrdersRequest, ApiOrder>;
}
/**
 * @generated from protobuf service api.Api
 */
export class ApiClient implements IApiClient, ServiceInfo {
    typeName = Api.typeName;
    methods = Api.methods;
    options = Api.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: signUp(api.ApiSignUpRequest) returns (api.ApiSignUpResponse);
     */
    signUp(input: ApiSignUpRequest, options?: RpcOptions): UnaryCall<ApiSignUpRequest, ApiSignUpResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiSignUpRequest, ApiSignUpResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: signIn(api.ApiSignInRequest) returns (api.ApiSignInResponse);
     */
    signIn(input: ApiSignInRequest, options?: RpcOptions): UnaryCall<ApiSignInRequest, ApiSignInResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiSignInRequest, ApiSignInResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: createRestaurant(api.ApiCreateRestaurantRequest) returns (api.ApiCreateRestaurantResponse);
     */
    createRestaurant(input: ApiCreateRestaurantRequest, options?: RpcOptions): UnaryCall<ApiCreateRestaurantRequest, ApiCreateRestaurantResponse> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiCreateRestaurantRequest, ApiCreateRestaurantResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: deleteRestaurant(api.ApiDeleteRestaurantRequest) returns (api.ApiDeleteRestaurantResponse);
     */
    deleteRestaurant(input: ApiDeleteRestaurantRequest, options?: RpcOptions): UnaryCall<ApiDeleteRestaurantRequest, ApiDeleteRestaurantResponse> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiDeleteRestaurantRequest, ApiDeleteRestaurantResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: updateRestaurant(api.ApiUpdateRestaurantRequest) returns (api.ApiUpdateRestaurantResponse);
     */
    updateRestaurant(input: ApiUpdateRestaurantRequest, options?: RpcOptions): UnaryCall<ApiUpdateRestaurantRequest, ApiUpdateRestaurantResponse> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiUpdateRestaurantRequest, ApiUpdateRestaurantResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: getRestaurant(api.ApiGetRestaurantRequest) returns (api.ApiGetRestaurantResponse);
     */
    getRestaurant(input: ApiGetRestaurantRequest, options?: RpcOptions): UnaryCall<ApiGetRestaurantRequest, ApiGetRestaurantResponse> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiGetRestaurantRequest, ApiGetRestaurantResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: getRestaurants(api.ApiGetRestaurantsRequest) returns (api.ApiGetRestaurantsResponse);
     */
    getRestaurants(input: ApiGetRestaurantsRequest, options?: RpcOptions): UnaryCall<ApiGetRestaurantsRequest, ApiGetRestaurantsResponse> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiGetRestaurantsRequest, ApiGetRestaurantsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: addItem(api.ApiAddItemRequest) returns (api.ApiAddItemResponse);
     */
    addItem(input: ApiAddItemRequest, options?: RpcOptions): UnaryCall<ApiAddItemRequest, ApiAddItemResponse> {
        const method = this.methods[7], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiAddItemRequest, ApiAddItemResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: removeItem(api.ApiRemoveItemRequest) returns (api.ApiRemoveItemResponse);
     */
    removeItem(input: ApiRemoveItemRequest, options?: RpcOptions): UnaryCall<ApiRemoveItemRequest, ApiRemoveItemResponse> {
        const method = this.methods[8], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiRemoveItemRequest, ApiRemoveItemResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: updateItem(api.ApiUpdateItemRequest) returns (api.ApiUpdateItemResponse);
     */
    updateItem(input: ApiUpdateItemRequest, options?: RpcOptions): UnaryCall<ApiUpdateItemRequest, ApiUpdateItemResponse> {
        const method = this.methods[9], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiUpdateItemRequest, ApiUpdateItemResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: getItem(api.ApiGetItemRequest) returns (api.ApiGetItemResponse);
     */
    getItem(input: ApiGetItemRequest, options?: RpcOptions): UnaryCall<ApiGetItemRequest, ApiGetItemResponse> {
        const method = this.methods[10], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiGetItemRequest, ApiGetItemResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: getItems(api.ApiGetItemsRequest) returns (api.ApiGetItemsResponse);
     */
    getItems(input: ApiGetItemsRequest, options?: RpcOptions): UnaryCall<ApiGetItemsRequest, ApiGetItemsResponse> {
        const method = this.methods[11], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiGetItemsRequest, ApiGetItemsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: makeOrder(api.ApiMakeOrderRequest) returns (api.ApiMakeOrderResponse);
     */
    makeOrder(input: ApiMakeOrderRequest, options?: RpcOptions): UnaryCall<ApiMakeOrderRequest, ApiMakeOrderResponse> {
        const method = this.methods[12], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiMakeOrderRequest, ApiMakeOrderResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: completeOrder(api.ApiCompleteOrderRequest) returns (api.ApiCompleteOrderResponse);
     */
    completeOrder(input: ApiCompleteOrderRequest, options?: RpcOptions): UnaryCall<ApiCompleteOrderRequest, ApiCompleteOrderResponse> {
        const method = this.methods[13], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiCompleteOrderRequest, ApiCompleteOrderResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: getOrders(api.ApiGetOrdersRequest) returns (stream api.ApiOrder);
     */
    getOrders(input: ApiGetOrdersRequest, options?: RpcOptions): ServerStreamingCall<ApiGetOrdersRequest, ApiOrder> {
        const method = this.methods[14], opt = this._transport.mergeOptions(options);
        return stackIntercept<ApiGetOrdersRequest, ApiOrder>("serverStreaming", this._transport, method, opt, input);
    }
}
