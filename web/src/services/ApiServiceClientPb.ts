/**
 * @fileoverview gRPC-Web generated client stub for api
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.4.2
// 	protoc              v3.21.12
// source: api.proto

/* eslint-disable */
// @ts-nocheck

import * as grpcWeb from "grpc-web";

import * as api_pb from "./api_pb";

export class ApiClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string };
  options_: null | { [index: string]: any };

  constructor(
    hostname: string,
    credentials?: null | { [index: string]: string },
    options?: null | { [index: string]: any }
  ) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options["format"] = "text";

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, "");
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorsignUp = new grpcWeb.MethodDescriptor(
    "/api.Api/signUp",
    grpcWeb.MethodType.UNARY,
    api_pb.ApiSignUpRequest,
    api_pb.ApiSignUpResponse,
    (request: api_pb.ApiSignUpRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiSignUpResponse.deserializeBinary
  );

  signUp(
    request: api_pb.ApiSignUpRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<api_pb.ApiSignUpResponse>;

  signUp(
    request: api_pb.ApiSignUpRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiSignUpResponse
    ) => void
  ): grpcWeb.ClientReadableStream<api_pb.ApiSignUpResponse>;

  signUp(
    request: api_pb.ApiSignUpRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiSignUpResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/api.Api/signUp",
        request,
        metadata || {},
        this.methodDescriptorsignUp,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/api.Api/signUp",
      request,
      metadata || {},
      this.methodDescriptorsignUp
    );
  }

  methodDescriptorsignIn = new grpcWeb.MethodDescriptor(
    "/api.Api/signIn",
    grpcWeb.MethodType.UNARY,
    api_pb.ApiSignInRequest,
    api_pb.ApiSignInResponse,
    (request: api_pb.ApiSignInRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiSignInResponse.deserializeBinary
  );

  signIn(
    request: api_pb.ApiSignInRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<api_pb.ApiSignInResponse>;

  signIn(
    request: api_pb.ApiSignInRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiSignInResponse
    ) => void
  ): grpcWeb.ClientReadableStream<api_pb.ApiSignInResponse>;

  signIn(
    request: api_pb.ApiSignInRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiSignInResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/api.Api/signIn",
        request,
        metadata || {},
        this.methodDescriptorsignIn,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/api.Api/signIn",
      request,
      metadata || {},
      this.methodDescriptorsignIn
    );
  }

  methodDescriptorcreateRestaurant = new grpcWeb.MethodDescriptor(
    "/api.Api/createRestaurant",
    grpcWeb.MethodType.UNARY,
    api_pb.ApiCreateRestaurantRequest,
    api_pb.ApiCreateRestaurantResponse,
    (request: api_pb.ApiCreateRestaurantRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiCreateRestaurantResponse.deserializeBinary
  );

  createRestaurant(
    request: api_pb.ApiCreateRestaurantRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<api_pb.ApiCreateRestaurantResponse>;

  createRestaurant(
    request: api_pb.ApiCreateRestaurantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiCreateRestaurantResponse
    ) => void
  ): grpcWeb.ClientReadableStream<api_pb.ApiCreateRestaurantResponse>;

  createRestaurant(
    request: api_pb.ApiCreateRestaurantRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiCreateRestaurantResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/api.Api/createRestaurant",
        request,
        metadata || {},
        this.methodDescriptorcreateRestaurant,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/api.Api/createRestaurant",
      request,
      metadata || {},
      this.methodDescriptorcreateRestaurant
    );
  }

  methodDescriptordeleteRestaurant = new grpcWeb.MethodDescriptor(
    "/api.Api/deleteRestaurant",
    grpcWeb.MethodType.UNARY,
    api_pb.ApiDeleteRestaurantRequest,
    api_pb.ApiDeleteRestaurantResponse,
    (request: api_pb.ApiDeleteRestaurantRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiDeleteRestaurantResponse.deserializeBinary
  );

  deleteRestaurant(
    request: api_pb.ApiDeleteRestaurantRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<api_pb.ApiDeleteRestaurantResponse>;

  deleteRestaurant(
    request: api_pb.ApiDeleteRestaurantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiDeleteRestaurantResponse
    ) => void
  ): grpcWeb.ClientReadableStream<api_pb.ApiDeleteRestaurantResponse>;

  deleteRestaurant(
    request: api_pb.ApiDeleteRestaurantRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiDeleteRestaurantResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/api.Api/deleteRestaurant",
        request,
        metadata || {},
        this.methodDescriptordeleteRestaurant,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/api.Api/deleteRestaurant",
      request,
      metadata || {},
      this.methodDescriptordeleteRestaurant
    );
  }

  methodDescriptorupdateRestaurant = new grpcWeb.MethodDescriptor(
    "/api.Api/updateRestaurant",
    grpcWeb.MethodType.UNARY,
    api_pb.ApiUpdateRestaurantRequest,
    api_pb.ApiUpdateRestaurantResponse,
    (request: api_pb.ApiUpdateRestaurantRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiUpdateRestaurantResponse.deserializeBinary
  );

  updateRestaurant(
    request: api_pb.ApiUpdateRestaurantRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<api_pb.ApiUpdateRestaurantResponse>;

  updateRestaurant(
    request: api_pb.ApiUpdateRestaurantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiUpdateRestaurantResponse
    ) => void
  ): grpcWeb.ClientReadableStream<api_pb.ApiUpdateRestaurantResponse>;

  updateRestaurant(
    request: api_pb.ApiUpdateRestaurantRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiUpdateRestaurantResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/api.Api/updateRestaurant",
        request,
        metadata || {},
        this.methodDescriptorupdateRestaurant,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/api.Api/updateRestaurant",
      request,
      metadata || {},
      this.methodDescriptorupdateRestaurant
    );
  }

  methodDescriptorgetRestaurant = new grpcWeb.MethodDescriptor(
    "/api.Api/getRestaurant",
    grpcWeb.MethodType.UNARY,
    api_pb.ApiGetRestaurantRequest,
    api_pb.ApiGetRestaurantResponse,
    (request: api_pb.ApiGetRestaurantRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiGetRestaurantResponse.deserializeBinary
  );

  getRestaurant(
    request: api_pb.ApiGetRestaurantRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<api_pb.ApiGetRestaurantResponse>;

  getRestaurant(
    request: api_pb.ApiGetRestaurantRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiGetRestaurantResponse
    ) => void
  ): grpcWeb.ClientReadableStream<api_pb.ApiGetRestaurantResponse>;

  getRestaurant(
    request: api_pb.ApiGetRestaurantRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiGetRestaurantResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/api.Api/getRestaurant",
        request,
        metadata || {},
        this.methodDescriptorgetRestaurant,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/api.Api/getRestaurant",
      request,
      metadata || {},
      this.methodDescriptorgetRestaurant
    );
  }

  methodDescriptorgetRestaurants = new grpcWeb.MethodDescriptor(
    "/api.Api/getRestaurants",
    grpcWeb.MethodType.UNARY,
    api_pb.ApiGetRestaurantsRequest,
    api_pb.ApiGetRestaurantsResponse,
    (request: api_pb.ApiGetRestaurantsRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiGetRestaurantsResponse.deserializeBinary
  );

  getRestaurants(
    request: api_pb.ApiGetRestaurantsRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<api_pb.ApiGetRestaurantsResponse>;

  getRestaurants(
    request: api_pb.ApiGetRestaurantsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiGetRestaurantsResponse
    ) => void
  ): grpcWeb.ClientReadableStream<api_pb.ApiGetRestaurantsResponse>;

  getRestaurants(
    request: api_pb.ApiGetRestaurantsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiGetRestaurantsResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/api.Api/getRestaurants",
        request,
        metadata || {},
        this.methodDescriptorgetRestaurants,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/api.Api/getRestaurants",
      request,
      metadata || {},
      this.methodDescriptorgetRestaurants
    );
  }

  methodDescriptoraddItem = new grpcWeb.MethodDescriptor(
    "/api.Api/addItem",
    grpcWeb.MethodType.UNARY,
    api_pb.ApiAddItemRequest,
    api_pb.ApiAddItemResponse,
    (request: api_pb.ApiAddItemRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiAddItemResponse.deserializeBinary
  );

  addItem(
    request: api_pb.ApiAddItemRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<api_pb.ApiAddItemResponse>;

  addItem(
    request: api_pb.ApiAddItemRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiAddItemResponse
    ) => void
  ): grpcWeb.ClientReadableStream<api_pb.ApiAddItemResponse>;

  addItem(
    request: api_pb.ApiAddItemRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiAddItemResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/api.Api/addItem",
        request,
        metadata || {},
        this.methodDescriptoraddItem,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/api.Api/addItem",
      request,
      metadata || {},
      this.methodDescriptoraddItem
    );
  }

  methodDescriptorremoveItem = new grpcWeb.MethodDescriptor(
    "/api.Api/removeItem",
    grpcWeb.MethodType.UNARY,
    api_pb.ApiRemoveItemRequest,
    api_pb.ApiRemoveItemResponse,
    (request: api_pb.ApiRemoveItemRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiRemoveItemResponse.deserializeBinary
  );

  removeItem(
    request: api_pb.ApiRemoveItemRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<api_pb.ApiRemoveItemResponse>;

  removeItem(
    request: api_pb.ApiRemoveItemRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiRemoveItemResponse
    ) => void
  ): grpcWeb.ClientReadableStream<api_pb.ApiRemoveItemResponse>;

  removeItem(
    request: api_pb.ApiRemoveItemRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiRemoveItemResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/api.Api/removeItem",
        request,
        metadata || {},
        this.methodDescriptorremoveItem,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/api.Api/removeItem",
      request,
      metadata || {},
      this.methodDescriptorremoveItem
    );
  }

  methodDescriptorupdateItem = new grpcWeb.MethodDescriptor(
    "/api.Api/updateItem",
    grpcWeb.MethodType.UNARY,
    api_pb.ApiUpdateItemRequest,
    api_pb.ApiUpdateItemResponse,
    (request: api_pb.ApiUpdateItemRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiUpdateItemResponse.deserializeBinary
  );

  updateItem(
    request: api_pb.ApiUpdateItemRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<api_pb.ApiUpdateItemResponse>;

  updateItem(
    request: api_pb.ApiUpdateItemRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiUpdateItemResponse
    ) => void
  ): grpcWeb.ClientReadableStream<api_pb.ApiUpdateItemResponse>;

  updateItem(
    request: api_pb.ApiUpdateItemRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiUpdateItemResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/api.Api/updateItem",
        request,
        metadata || {},
        this.methodDescriptorupdateItem,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/api.Api/updateItem",
      request,
      metadata || {},
      this.methodDescriptorupdateItem
    );
  }

  methodDescriptorgetItem = new grpcWeb.MethodDescriptor(
    "/api.Api/getItem",
    grpcWeb.MethodType.UNARY,
    api_pb.ApiGetItemRequest,
    api_pb.ApiGetItemResponse,
    (request: api_pb.ApiGetItemRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiGetItemResponse.deserializeBinary
  );

  getItem(
    request: api_pb.ApiGetItemRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<api_pb.ApiGetItemResponse>;

  getItem(
    request: api_pb.ApiGetItemRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiGetItemResponse
    ) => void
  ): grpcWeb.ClientReadableStream<api_pb.ApiGetItemResponse>;

  getItem(
    request: api_pb.ApiGetItemRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiGetItemResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/api.Api/getItem",
        request,
        metadata || {},
        this.methodDescriptorgetItem,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/api.Api/getItem",
      request,
      metadata || {},
      this.methodDescriptorgetItem
    );
  }

  methodDescriptorgetItems = new grpcWeb.MethodDescriptor(
    "/api.Api/getItems",
    grpcWeb.MethodType.UNARY,
    api_pb.ApiGetItemsRequest,
    api_pb.ApiGetItemsResponse,
    (request: api_pb.ApiGetItemsRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiGetItemsResponse.deserializeBinary
  );

  getItems(
    request: api_pb.ApiGetItemsRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<api_pb.ApiGetItemsResponse>;

  getItems(
    request: api_pb.ApiGetItemsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiGetItemsResponse
    ) => void
  ): grpcWeb.ClientReadableStream<api_pb.ApiGetItemsResponse>;

  getItems(
    request: api_pb.ApiGetItemsRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiGetItemsResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/api.Api/getItems",
        request,
        metadata || {},
        this.methodDescriptorgetItems,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/api.Api/getItems",
      request,
      metadata || {},
      this.methodDescriptorgetItems
    );
  }

  methodDescriptormakeOrder = new grpcWeb.MethodDescriptor(
    "/api.Api/makeOrder",
    grpcWeb.MethodType.UNARY,
    api_pb.ApiMakeOrderRequest,
    api_pb.ApiMakeOrderResponse,
    (request: api_pb.ApiMakeOrderRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiMakeOrderResponse.deserializeBinary
  );

  makeOrder(
    request: api_pb.ApiMakeOrderRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<api_pb.ApiMakeOrderResponse>;

  makeOrder(
    request: api_pb.ApiMakeOrderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiMakeOrderResponse
    ) => void
  ): grpcWeb.ClientReadableStream<api_pb.ApiMakeOrderResponse>;

  makeOrder(
    request: api_pb.ApiMakeOrderRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiMakeOrderResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/api.Api/makeOrder",
        request,
        metadata || {},
        this.methodDescriptormakeOrder,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/api.Api/makeOrder",
      request,
      metadata || {},
      this.methodDescriptormakeOrder
    );
  }

  methodDescriptorcompleteOrder = new grpcWeb.MethodDescriptor(
    "/api.Api/completeOrder",
    grpcWeb.MethodType.UNARY,
    api_pb.ApiCompleteOrderRequest,
    api_pb.ApiCompleteOrderResponse,
    (request: api_pb.ApiCompleteOrderRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiCompleteOrderResponse.deserializeBinary
  );

  completeOrder(
    request: api_pb.ApiCompleteOrderRequest,
    metadata: grpcWeb.Metadata | null
  ): Promise<api_pb.ApiCompleteOrderResponse>;

  completeOrder(
    request: api_pb.ApiCompleteOrderRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiCompleteOrderResponse
    ) => void
  ): grpcWeb.ClientReadableStream<api_pb.ApiCompleteOrderResponse>;

  completeOrder(
    request: api_pb.ApiCompleteOrderRequest,
    metadata: grpcWeb.Metadata | null,
    callback?: (
      err: grpcWeb.RpcError,
      response: api_pb.ApiCompleteOrderResponse
    ) => void
  ) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ + "/api.Api/completeOrder",
        request,
        metadata || {},
        this.methodDescriptorcompleteOrder,
        callback
      );
    }
    return this.client_.unaryCall(
      this.hostname_ + "/api.Api/completeOrder",
      request,
      metadata || {},
      this.methodDescriptorcompleteOrder
    );
  }

  methodDescriptorgetOrders = new grpcWeb.MethodDescriptor(
    "/api.Api/getOrders",
    grpcWeb.MethodType.SERVER_STREAMING,
    api_pb.ApiGetOrdersRequest,
    api_pb.ApiOrder,
    (request: api_pb.ApiGetOrdersRequest) => {
      return request.serializeBinary();
    },
    api_pb.ApiOrder.deserializeBinary
  );

  getOrders(
    request: api_pb.ApiGetOrdersRequest,
    metadata?: grpcWeb.Metadata
  ): grpcWeb.ClientReadableStream<api_pb.ApiOrder> {
    return this.client_.serverStreaming(
      this.hostname_ + "/api.Api/getOrders",
      request,
      metadata || {},
      this.methodDescriptorgetOrders
    );
  }
}
